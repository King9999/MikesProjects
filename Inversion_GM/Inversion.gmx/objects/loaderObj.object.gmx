<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>readInverted = false;
global.shadowCreated = false;   //need this or game will crash.

//load the next level if there's any remaining.
if (global.currentLevel &gt;= ds_list_size(global.fileList))
{
    global.currentLevel = 0;
}


nextLevel = ds_list_find_value(global.fileList, global.currentLevel);

var file = file_text_open_read(nextLevel);
var i = 0;
var j = 0;

 //capture level dimensions
var roomWidth = file_text_read_real(file);
show_debug_message("Showing width " + string(roomWidth)); 
var roomHeight = file_text_read_real(file);
show_debug_message("Showing grid value " + string(roomHeight)); 

global.mapGrid = ds_grid_create(floor(roomWidth / TILE_SIZE), floor(roomHeight / TILE_SIZE));
global.inverseGrid = ds_grid_create(floor(roomWidth / TILE_SIZE), floor(roomHeight / TILE_SIZE));

while (!file_text_eof(file))
{
    if (!readInverted)
    {
        if (i &lt; ds_grid_width(global.mapGrid)) //if true, begin drawing inverted level.
        {   
            if(!file_text_eoln(file))
            {

                 ds_grid_set(global.mapGrid, i, j, file_text_read_real(file));                                                        
                 j++;
            }
            else
            {
                file_text_readln(file);
                j = 0;
                i++;
            }
        }
        else
        {
            readInverted = true;
            show_debug_message("Reading inverted level now!"); 
            file_text_readln(file);
            j = 0;
            i = 0;
            
        }
    }
    else    //reading the inverted level now
    {
        if(!file_text_eoln(file))
        {
            
             ds_grid_set(global.inverseGrid, i, j, file_text_read_real(file));                                     
             j++;

        }
        else
        {
            file_text_readln(file);
            j = 0;
            i++;
        }
    }
}        

file_text_close(file); 

room_set_width(gameScreen, roomWidth);
room_set_height(gameScreen, roomHeight);
room_goto(gameScreen);
    




</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
