<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>shadow</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* player's shadow. The only major difference is that it can't invert or die. */

image_speed = 0;        //for now, no animation

//states
isJumping = false;
isDoubleJumping = false;
isRunning = false;

//player movement

speedLimit = 0;//changes depending on whether player is running or walking
jumpHeight = 0;//must be a negative number
currentFriction = 0;//when it's 1, player can move normally.
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//x = playerObj.x;
if (y &lt; playerObj.y + sprite_height)
{
    y = playerObj.y + sprite_height;
    vspeed = GRAVITY;
    isJumping = false;
    isDoubleJumping = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>vspeed -= GRAVITY;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//apply friction
hspeed *= currentFriction;
if (abs(hspeed) &lt; 0.1)
{
    hspeed = 0;
}

//apply gravity

    //vspeed -= GRAVITY;


if (vspeed &lt; -DROP_SPEED)
{
    vspeed = -DROP_SPEED;
}

//boundary check
x = playerObj.x;
if (x &lt; 0)
{
    x = 0;
}
if (x + sprite_width &gt; room_width)
{
    x = room_width - sprite_width;
}

if (y &lt; playerObj.y + sprite_height)
{
    y = playerObj.y + sprite_height;
    vspeed = 0;
    isJumping = false;
    isDoubleJumping = false;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//gamepad check


//movement (d-pad only)
/*if (gamepad_button_check(0, gp_padl) || gamepad_axis_value(0, gp_axislh) &lt; -0.5)
{
    image_index = 1;
    hspeed -= 0.3;
    currentFriction = 1;
    if (hspeed &lt; -WALK_SPEED) hspeed = -WALK_SPEED;
}


if (gamepad_button_check(0, gp_padr) || gamepad_axis_value(0, gp_axislh) &gt; 0.5) //it appears the dead zone is large here.
{
    image_index = 0;
    hspeed += 0.3;
    currentFriction = 1;
    if (hspeed &gt; WALK_SPEED) hspeed = WALK_SPEED;
}

if (gamepad_button_check_released(0, gp_padl) || gamepad_button_check_released(0, gp_padr) || gamepad_axis_value(0, gp_axislh) == 0)
{
    currentFriction = FRICTION;
}*/

//A button
if (global.padDetected)
{
    if (gamepad_button_check_pressed(0, gp_face1))
    {
        //jump
        if (!isJumping)
        {
            vspeed -= JUMP_HEIGHT;
            isJumping = true;
        }
        else
        {
            if (!isDoubleJumping)
            {
                vspeed -= JUMP_HEIGHT + vspeed;
                isDoubleJumping = true;
                show_debug_message("shadow is double jumping");
            }
        }
    }
}

x = playerObj.x;
//y = playerObj.y + sprite_height;
hspeed = playerObj.hspeed;
//vspeed = -playerObj.vspeed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_index = 0;
/*hspeed += 0.3;
currentFriction = 1;
if (hspeed &gt; WALK_SPEED) hspeed = WALK_SPEED;*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="65">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_index = 1;    //mirrored frame
/*hspeed -= 0.3;
currentFriction = 1;
if (hspeed &lt; -WALK_SPEED) hspeed = -WALK_SPEED;*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="87">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!global.padDetected)
{
    //jump
    //jumpHeight = JUMP_HEIGHT * -1;
    //dJumpHeight = (JUMP_HEIGHT - vspeed) * -1;
    
   if (!isJumping)
    {
        vspeed -= JUMP_HEIGHT;
        isJumping = true;
    }
    else
    {
        if (!isDoubleJumping)
        {
            vspeed -= JUMP_HEIGHT + vspeed;
            isDoubleJumping = true;
            //show_debug_message("shadow is double jumping");
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//currentFriction = FRICTION;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="65">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//image_index = 1;
//currentFriction = FRICTION;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
