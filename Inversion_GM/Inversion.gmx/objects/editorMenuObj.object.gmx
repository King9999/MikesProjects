<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* These are here in case I load from an existing file. The two grids must be destroyed from the editor screen */

global.loadFromFile = false;
readInverted = false;       //if true, file is reading the inverted level.

//check for gamepad
global.padDetected = false;
pads = gamepad_get_device_count();

var k = 0;
while (k &lt; pads &amp;&amp; !global.padDetected)
{
    if (gamepad_is_connected(k))
    {
        global.padDetected = true;
    }
    else
    {
        k++;
    } 
}

//global.mapGrid = 0;
//global.inverseGrid = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//check for mouse input
if (mouse_check_button_pressed(mb_left))
{
    //where did I press?
    if (mouse_x &gt;= 150 &amp;&amp; mouse_x &lt;= 290 &amp;&amp; mouse_y &gt;= 600 &amp;&amp; mouse_y &lt;= 640)
    {
        show_debug_message("Clicked on new level");
        var roomWidth = get_integer("Enter level width", 1024);     //only works in debug mode!
        var roomHeight = get_integer("Enter level height", 768);
        room_set_width(editorScreen, roomWidth);
        room_set_height(editorScreen, roomHeight);
        room_goto(editorScreen);
    }
    
    if (mouse_x &gt;= 500 &amp;&amp; mouse_x &lt;= 640 &amp;&amp; mouse_y &gt;= 600 &amp;&amp; mouse_y &lt;= 640)
    {
        show_debug_message("Clicked on load level");
        global.loadFromFile = true;
        
        //load level.
        var file = get_open_filename_ext("Text file|*.txt", "", "", "Open Level");
    
        if (file != "")
        {
            
            //load file           
            var fileName = file_text_open_read(file);
            var i = 0;
            var j = 0;
            
            //capture level dimensions
            var roomWidth = file_text_read_real(fileName);
            show_debug_message("Showing width " + string(roomWidth)); 
            var roomHeight = file_text_read_real(fileName);
            show_debug_message("Showing grid value " + string(roomHeight)); 
            
            global.mapGrid = ds_grid_create(floor(roomWidth / TILE_SIZE), floor(roomHeight / TILE_SIZE));
            global.inverseGrid = ds_grid_create(floor(roomWidth / TILE_SIZE), floor(roomHeight / TILE_SIZE));
            
            while (!file_text_eof(fileName))
            {
                if (!readInverted)
                {
                    if (i &lt; ds_grid_width(global.mapGrid)) //if true, begin drawing inverted level.
                    {   
                        if(!file_text_eoln(fileName))
                        {
                            
                             //show_debug_message("i = " + string(i));
                             //show_debug_message("j = " + string(j));
                             ds_grid_set(global.mapGrid, i, j, file_text_read_real(fileName));
                             //show_debug_message("Showing grid value " + string(ds_grid_get(global.mapGrid, i, j)));                                      
                             j++;
        
                        }
                        else
                        {
                            file_text_readln(fileName);
                            j = 0;
                            i++;
                        }
                    }
                    else
                    {
                        readInverted = true;
                        show_debug_message("Reading inverted level now!"); 
                        file_text_readln(fileName);
                        j = 0;
                        i = 0;
                        
                    }
                }
                else    //reading the inverted level now
                {
                    if(!file_text_eoln(fileName))
                    {
                        
                         ds_grid_set(global.inverseGrid, i, j, file_text_read_real(fileName));                                     
                         j++;
    
                    }
                    else
                    {
                        file_text_readln(fileName);
                        j = 0;
                        i++;
                    }
                }
            }        
            file_text_close(fileName);
        }
        
        room_set_width(editorScreen, roomWidth);
        room_set_height(editorScreen, roomHeight);
        room_goto(editorScreen);
    }  
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//new level button. When clicked, it will ask for level dimensions
draw_set_color(c_blue);
draw_roundrect(150, 600, 290, 640, false);

draw_set_font(gameFont);
draw_set_color(c_white);
draw_text(165, 610, "New Level");

//editor button
draw_set_color(c_blue);
draw_roundrect(500, 600, 640, 640, false);

draw_set_font(gameFont);
draw_set_color(c_white);
draw_text(515, 610, "Load Level");
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
