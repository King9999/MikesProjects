/* The Knight has armor which prevents him from getting knocked back from an enemy action. Also,
he drops less candy when hit. However, movement speed is slightly slower.

STATS
move speed = slow (0.75x move speed)
candy drop amt = low (2 pieces of candy per hit)
cooldown = normal (5 seconds / 300 frames) */

package 
{
	import flash.display.MovieClip;
	import flash.events.KeyboardEvent;
	import flash.ui.Keyboard;
	import flash.events.Event;
	import flash.display.Sprite;	//used for collision checking.
	
	public class Knight extends Player
	{
		private var _attackArea:Sprite;	//action's hit box.
		private var _actionTimer:int;	//how long the action lasts for
		private var _attackUsed:Boolean;
		private var _booBubble:BooBubble;

		public function Knight() 
		{
			_playerName = "Knight";
			_candyAmount = 0;
			_cooldown = 150;		//2.5 seconds to recharge sword attack
			_dropAmount = 2;
			_candyTaken = 1;
			_vx = 0;
			_vy = 0;
			_moveSpeed = 0.75;
			_actionTimer = 0;		//sword lasts for 1 second
			_attackUsed = false;
			
			_attackArea = new Sprite(); 
			_attackArea.graphics.beginFill(0xFF0000);		//used to draw range. will be hidden for real game
			_attackArea.graphics.drawRect(25, 0, 80, 10);	//attack range
			_attackArea.graphics.endFill();
			
			//"BOO!" graphic.
			//_booBubble = new BooBubble();
			//_booBubble.x = -10;
//			_booBubble.y = -10;
//			_booBubble.height = 60;
			
			//event listeners
			addEventListener(Event.ENTER_FRAME, onEnterFrame);
		}
		
		
		
		public override function UseAction():void
		{
			/* The Knight has a sword attack that will knock the opponent back and cause him to
			drop some candy.  This attack is fairly fast.
			
			when the action is performed, a rectangle is created in front of the Knight. Any target that
			collides with it gets knocked back and loses candy.
			*/
		}
		
		
		function onEnterFrame(event:Event):void
		{
			
			//adjust the cooldown and action timers
			_cooldown--;
			if (_cooldown < 0)
			{
				_cooldown = 0;
			}
			
			_actionTimer--;
			if (_actionTimer <= 0)
			{
				_actionTimer = 0;
				if (_attackUsed)
				{
					removeChild(_attackArea);	//action ended
					//removeChild(_booBubble);
					_attackUsed = false;
				}
			}
			else		//don't move the player until action is over
			{
				_vx = 0;
				_vy = 0;
			}
			
			
			/****check boundaries*****/
			if (this.x < 0)
			{
				this.x = 0;
			}
			
			if (this.x > stage.stageWidth - this.width)
			{
				this.x = stage.stageWidth - this.width;
			}
			
			if (this.y < 60) //make sure player doesn't go up to black border where HUD is
			{
				this.y = 60;
			}
			
			if (this.y > stage.stageHeight - this.height)
			{
				this.y = stage.stageHeight - this.height;
			}
		}

	} //end class
	
}
