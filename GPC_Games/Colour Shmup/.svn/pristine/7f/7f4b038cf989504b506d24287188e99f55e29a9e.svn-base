/* Each defeated enemy gives a score; bonus points can be awarded depending on how an enemy is 
defeated.
normal kill (destroy an enemy who doesn't oppose the player's colour) - 1x bonus
critical (destroy an enemy that opposes player's colour) - 2x bonus
absorb (player touches an enemy of same colour) - 3x bonus 

Enemies have different flight paths.  They have a starting point and an end point, but how they reach their destination can vary.*/

package  
{
	import flash.display.MovieClip;
	import flash.events.Event;
	import flash.display.DisplayObject;
	import flash.display.Graphics;
	import flash.display.Shape;
	import flash.display.Sprite;
	import flash.media.Sound;
	import flash.media.SoundChannel;
	import flash.net.URLRequest;
	import flash.media.SoundTransform;
	import flash.geom.Point;
	
	public class Enemy extends MovieClip
	{
		var startPoint:Point;		//the point the enemy starts at, usually offscreen.
		var endPoint:Point;			//the point the enemy travels to.
		var colour:uint;			//designated colour. 1 = white, 2 = red, 3 = blue, 4 = black
		var scoreValue:uint;		//how much a player gets for destroying this enemy
		var meterGain:Number;		//the amount added to rainbow gauge if absorbed
		
		

		public function Enemy(startPt:Point, endPt:Point, score:uint, meterAmt:Number, colour:uint) 
		{
			
			startPoint = startPt;
			endPoint = endPt;
			scoreValue = score;
			meterGain = meterAmt;
			this.x = startPt.x;
			this.y = startPt.y;
			this.colour = colour;
		}
		
		public function StartPoint():Point
		{
			return startPoint;
		}
		
		public function EndPoint():Point
		{
			return endPoint;
		}
		
		/*public function Image():DisplayObject
		{
			return graphic;
		}*/
		
		public function Colour():uint
		{
			/*var colourStr:String;
			
			switch(colour)
			{
				case 1:
					colourStr = "White";
					break;
				case 2:
					colourStr = "Red";
					break;
				case 3:
					colourStr = "Blue";
					break;
				case 4:
					colourStr = "Black";
					break;
			}*/
			
			return colour;
		}

	}
	
}
